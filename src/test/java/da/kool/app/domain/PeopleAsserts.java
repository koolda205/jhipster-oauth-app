package da.kool.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PeopleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPeopleAllPropertiesEquals(People expected, People actual) {
        assertPeopleAutoGeneratedPropertiesEquals(expected, actual);
        assertPeopleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPeopleAllUpdatablePropertiesEquals(People expected, People actual) {
        assertPeopleUpdatableFieldsEquals(expected, actual);
        assertPeopleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPeopleAutoGeneratedPropertiesEquals(People expected, People actual) {
        assertThat(actual)
            .as("Verify People auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPeopleUpdatableFieldsEquals(People expected, People actual) {
        assertThat(actual)
            .as("Verify People relevant properties")
            .satisfies(a -> assertThat(a.getAddress()).as("check address").isEqualTo(expected.getAddress()))
            .satisfies(a -> assertThat(a.getEmail()).as("check email").isEqualTo(expected.getEmail()))
            .satisfies(a -> assertThat(a.getPassword()).as("check password").isEqualTo(expected.getPassword()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPeopleUpdatableRelationshipsEquals(People expected, People actual) {
        // empty method
    }
}
