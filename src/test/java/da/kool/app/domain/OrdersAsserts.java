package da.kool.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrdersAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdersAllPropertiesEquals(Orders expected, Orders actual) {
        assertOrdersAutoGeneratedPropertiesEquals(expected, actual);
        assertOrdersAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdersAllUpdatablePropertiesEquals(Orders expected, Orders actual) {
        assertOrdersUpdatableFieldsEquals(expected, actual);
        assertOrdersUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdersAutoGeneratedPropertiesEquals(Orders expected, Orders actual) {
        assertThat(actual)
            .as("Verify Orders auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdersUpdatableFieldsEquals(Orders expected, Orders actual) {
        assertThat(actual)
            .as("Verify Orders relevant properties")
            .satisfies(a -> assertThat(a.getUserId()).as("check userId").isEqualTo(expected.getUserId()))
            .satisfies(a -> assertThat(a.getProductId()).as("check productId").isEqualTo(expected.getProductId()))
            .satisfies(a -> assertThat(a.getTotal()).as("check total").isEqualTo(expected.getTotal()))
            .satisfies(a -> assertThat(a.getQuantity()).as("check quantity").isEqualTo(expected.getQuantity()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdersUpdatableRelationshipsEquals(Orders expected, Orders actual) {
        // empty method
    }
}
