package da.kool.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductsAllPropertiesEquals(Products expected, Products actual) {
        assertProductsAutoGeneratedPropertiesEquals(expected, actual);
        assertProductsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductsAllUpdatablePropertiesEquals(Products expected, Products actual) {
        assertProductsUpdatableFieldsEquals(expected, actual);
        assertProductsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductsAutoGeneratedPropertiesEquals(Products expected, Products actual) {
        assertThat(actual)
            .as("Verify Products auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductsUpdatableFieldsEquals(Products expected, Products actual) {
        assertThat(actual)
            .as("Verify Products relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getCategory()).as("check category").isEqualTo(expected.getCategory()))
            .satisfies(a -> assertThat(a.getPrice()).as("check price").isEqualTo(expected.getPrice()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductsUpdatableRelationshipsEquals(Products expected, Products actual) {
        // empty method
    }
}
